version: '3.8'

services:
  petition_db:
    image: 'postgres:13'
    environment:
      POSTGRES_USER: petition_user
      POSTGRES_PASSWORD: welcome@123
      POSTGRES_DB: petition_db
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pg_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U petition_user -d petition_db"
        ]
      interval: 30s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
  petition_api:
    image: petition_api
    build: ./api
    environment:
      DATABASE_URI: 'postgresql://petition_user:welcome@123@postgres/petition_db'
    ports:
      - '5001:5000'
    depends_on:
      - petition_db
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5001/health" ]
      interval: 30s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s

  petition_bot:
    image: petition_bot
    build: ./bot
    environment:
      TOKEN: 'MTA5OTIzMDI1MTkyMzU0NjIwMg.GYceqz.1isHjZp1m97_J_-ipsvCBQ9VvGxq9Dy150j0zc'
      API_URL: 'http://api:5001'
    depends_on:
      - petition_api
    healthcheck:
      test: [ "CMD", "python", "healthcheck.py" ]
      interval: 30s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s

volumes:
  pg_data:
